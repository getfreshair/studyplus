<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Admin">
	<resultMap type="adminMember" id="adminmemberResultSet">
		<id property="member_Code" column="member_Code"></id>
		<result property="member_Id" column="member_Id"/>
		<result property="member_Pwd" column="member_Pwd"/>
		<result property="member_Nickname" column="member_Nickname"/>
		<result property="member_EnrollDate" column="member_EnrollDate"/>
		<result property="member_Status" column="member_Status"/>
		<result property="member_Class" column="member_Class"/>
		<result property="member_Introduction" column="member_Introduction"/>
		<result property="member_Age" column="member_Age"/>
		<result property="member_Job" column="member_Job"/>
		<result property="member_Gender" column="member_Gender"/>
		<result property="location_Code" column="location_Code"/>
		<result property="member_Phone" column="member_Phone"/>
		<result property="member_SMSConfirmation" column="member_SMSConfirmation"/>
		<collection property="files" javaType="memberFiles" resultMap="adminFiles"/>
		<collection property="category_Name" javaType="java.util.ArrayList" resultMap="adminInterestCategory"/>
	</resultMap>
	
<!-- 	<resultMap type="adminPenalty" id="adminPenaltyResultSet"> -->
<!-- 		<id property ="member_Code" column="member_Code"></id> -->
<!-- 		<result property="member_Id" column = "member_Id"/> -->
<!-- 		<result property="member_Status" column ="member_Status"/> -->
<!-- 		<result property="block_Code" column = "block_Code"/> -->
<!-- 		<result property="block_StartDate" column="block_StartDate"/> -->
<!-- 		<result property="block_EndDate" column="block_EndDate"/> -->
<!-- 		<result property="block_Reason" column = "block_Reason"/> -->
<!-- 		<result property="block_status" column="block_status"/> -->
<!-- 	</resultMap> -->
	
	<resultMap type="adminInterestCategory" id="admininterestCategoryResultSet">
		<result property="category_Name" column="category_Name"/>
	</resultMap>
	
	<resultMap type="adminFiles" id="adminfilesSet">
		<id property="files_Code" column="files_Code"/>
		<result property="files_BoardType" column="fileBoardType"/>
		<result property="files_OriginName" column="files_OriginName"/>
		<result property="files_Name" column="files_Name"/>
		<result property="files_EnrollDate" column="files_EnrollDate"/>
		<result property="files_Status" column="files_Status"/>
		<result property="files_DeleteDate" column="files_DeleteDate"/>
		<result property="member_Code" column="member_Code"/>
		<result property="group_Code" column="group_Code"/>
		<result property="pr_Code" column="pr_Code"/>
		<result property="board_Code" column="board_Code"/>
	</resultMap>
	
	
	<select id="selectMember" parameterType="map" resultType="hashmap">
	
	SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_NICKNAME,
		TO_CHAR(M.MEMBER_ENROLLDATE,'yyyy-mm-dd'), M.MEMBER_AGE, M.MEMBER_JOB, M.MEMBER_PHONE,
		M.MEMBER_GENDER, L.LOCATION_NAME,
		C.CATEGORY_NAME
		FROM MEMBER M
		JOIN LOCATION L ON(M.LOCATION_CODE = L.LOCATION_CODE)
		LEFT JOIN INTERESTCATEGORY IC ON(M.MEMBER_CODE = IC.MEMBER_CODE)
		LEFT JOIN CATEGORY C ON(IC.CATEGORY_CODE = C.CATEGORY_CODE)
	WHERE 1=1
	<if test='All neq ""'>
		AND(
		M.MEMBER_ID LIKE '%' || #{All} || '%'
		OR L.LOCATION_NAME LIKE '%' || #{All} || '%'
		OR M.MEMBER_NICKNAME LIKE '%' || #{All} || '%'
		OR M.MEMBER_PHONE LIKE '%' || #{All} || '%'
		OR M.MEMBER_GENDER LIKE '%' || #{All} || '%'
		)
	</if>
	<if test='Date1 neq ""'>
		AND
		M.MEMBER_ENROLLDATE BETWEEN #{Date1} AND #{Date2}
	</if>
	<if test='Option neq "전체"'>
		AND
		C.CATEGORY_NAME = #{Option}
	</if>
	</select>																	
	
	<insert id="penaltyMemberInsert">
		insert into BLOCK(BLOCK_CODE,BLOCK_REASON,BLOCK_TYPE,BLOCK_STARTDATE,BLOCK_ENDDATE,BLOCK_STATUS,MEMBER_CODE) VALUES(SEQ_BLOCK_BLOCK_CODE.NEXTVAL, #{textArea}, 0, SYSDATE, #{lockDate}, 0, #{code})
	</insert>
	
	<insert id="insertNotice">
		INSERT INTO NOTICE(NOTICE_CODE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_ENROLLDATE, NOTICE_DELETEDATE, NOTICE_STATUS, NOTICE_COUNT, MEMBER_CODE) VALUES(SEQ_NOTICE_NOTICE_CODE.NEXTVAL, #{title}, #{content}, SYSDATE, NULL, 0, 0, #{adminCode})
	</insert>
	
	
	<update id="penaltyMemberUpdate">
		UPDATE MEMBER SET MEMBER_STATUS = 3 WHERE MEMBER_CODE = #{code}
	</update>
	
	<update id="penaltyEndMember">
		UPDATE BLOCK SET BLOCK_STATUS = 1 WHERE BLOCK_CODE = #{code}
	</update>
	
	<update id="penaltyEndMemberUpdate">
		UPDATE MEMBER SET MEMBER_STATUS = 0 
		WHERE MEMBER_CODE = (SELECT B.MEMBER_CODE
                             FROM BLOCK B
                             WHERE BLOCK_CODE=#{code})
	</update>
	
	<update id="updateDispauseMember">
		UPDATE MEMBER SET MEMBER_STATUS = 1
		WHERE MEMBER_CODE = #{code}
	</update>
	
	<select id="getPenaltyList" parameterType="map" resultType="hashmap">
		SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_STATUS, B.BLOCK_CODE,
		  		B.BLOCK_STARTDATE, B.BLOCK_ENDDATE, B.BLOCK_REASON, B.BLOCK_STATUS
		FROM MEMBER M
		JOIN BLOCK B ON(M.MEMBER_CODE = B.MEMBER_CODE)
	    WHERE M.MEMBER_STATUS = 3 AND B.BLOCK_ENDDATE > SYSDATE AND
	    B.ROWID in (SELECT MIN(B.ROWID) from BLOCK B group by B.MEMBER_CODE)
	</select>
	
	<select id="getPenaltyEndList" parameterType="map" resultType="hashmap">
		SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_STATUS, B.BLOCK_CODE,
		B.BLOCK_STARTDATE, B.BLOCK_ENDDATE, B.BLOCK_REASON, B.BLOCK_STATUS
		FROM
		MEMBER M
		JOIN BLOCK B ON(M.MEMBER_CODE = B.MEMBER_CODE)
		WHERE M.MEMBER_STATUS = 3 AND SYSDATE > B.BLOCK_ENDDATE AND
		B.ROWID in (SELECT MIN(B.ROWID) from BLOCK B group by B.MEMBER_CODE)
	</select>
	
	<select id="searchPenaltyHistoryById" parameterType="map" resultType="hashmap">
		SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_STATUS, B.BLOCK_CODE,
		B.BLOCK_STARTDATE, B.BLOCK_ENDDATE, B.BLOCK_REASON, B.BLOCK_STATUS
		FROM MEMBER M 
		JOIN BLOCK B ON(M.MEMBER_CODE = B.MEMBER_CODE)
		WHERE M.MEMBER_ID LIKE '%' || #{keyword} || '%'
	</select>
	
	<select id="searchPenaltyHistoryByCode" parameterType="map" resultType="hashmap">
		SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_STATUS, B.BLOCK_CODE,
		B.BLOCK_STARTDATE, B.BLOCK_ENDDATE, B.BLOCK_REASON, B.BLOCK_STATUS
		FROM MEMBER M 
		JOIN BLOCK B ON(M.MEMBER_CODE = B.MEMBER_CODE)
		WHERE M.MEMBER_CODE LIKE '%' || #{keyword} || '%'
	</select>
	
	<select id="searchPenaltyHistoryByReason" parameterType="map" resultType="hashmap">
		SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_STATUS, B.BLOCK_CODE,
		B.BLOCK_STARTDATE, B.BLOCK_ENDDATE, B.BLOCK_REASON, B.BLOCK_STATUS
		FROM MEMBER M 
		JOIN BLOCK B ON(M.MEMBER_CODE = B.MEMBER_CODE)
		WHERE B.BLOCK_REASON LIKE '%' || #{keyword} || '%'
	</select>
	
	<select id="getDispauseList" parameterType="map" resultType="hashmap">
		SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_NICKNAME, M.MEMBER_GENDER, M.MEMBER_STATUS,
        M.MEMBER_PHONE, M.MEMBER_SMSCONFIRMATION, M.MEMBER_JOB , L.LOGINRECORD_DATE
        FROM MEMBER M
        JOIN LOGINRECORD L ON (M.MEMBER_CODE = L.MEMBER_CODE)
		WHERE M.MEMBER_STATUS = 0 AND (SYSDATE - L.LOGINRECORD_DATE) > 90
	</select>
	
	<select id="searchDispauseList" parameterType="java.util.HashMap" resultType="always.awake.studyplus.admin.model.vo.DispauseBoard">
		SELECT M.MEMBER_CODE, M.MEMBER_ID, M.MEMBER_NICKNAME, M.MEMBER_GENDER, M.MEMBER_PHONE,
				M.MEMBER_SMSCONFIRMATION, TO_CHAR(L.LOGINRECORD_DATE,'YYYYMMDD') AS LOGINRECORD_DATE, M.MEMBER_STATUS
		FROM MEMBER M
		JOIN LOGINRECORD L ON (M.MEMBER_CODE = L.MEMBER_CODE)
		WHERE 1= 1
		<if test='option eq "memberId"'>
			AND
			M.MEMBER_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test='option eq "memberCode"'>
			AND
			M.MEMBER_CODE LIKE '%' || #{keyword} || '%'
		</if>
	</select>
	
	<select id="countDispauseArticle" parameterType="java.util.HashMap" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		WHERE M.MEMBER_STATUS = 1 
		<if test='option eq "memberId"'>
		AND M.MEMBER_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test='option eq "memberCode"'>
		AND M.MEMBER_CODE LIKE '%' || #{keyword} || '%'
		</if>
	</select>
	
	<select id="searchGroupList" parameterType="java.util.HashMap" resultType="hashmap">
		SELECT M.MEMBER_ID,M.MEMBER_PHONE, SG.STUDYGROUP_CODE, SG.STUDYGROUP_NAME, SG.STUDYGROUP_OPENSTATUS, SG.STUDYGROUP_INTRO, TO_CHAR(STUDYGROUP_STDATE, 'yyyy-mm-dd') AS STUDYGROUP_STDATE, SG.STUDYGROUP_GOALTIME, SG.STUDYGROUP_MAXNUM, SG.MEMBER_CODE, C.CATEGORY_NAME, L.LOCATION_NAME, NVL(JG.JOINGROUP_MEMBERCOUNT, 0) AS JOINGROUP_MEMBERCOUNT
		FROM STUDYGROUP SG
		JOIN LOCATION L USING(LOCATION_CODE)
		JOIN CATEGORY C USING(CATEGORY_CODE)
        JOIN MEMBER M ON(SG.MEMBER_CODE = M.MEMBER_CODE)
		LEFT JOIN (SELECT COUNT(MEMBER_CODE) AS JOINGROUP_MEMBERCOUNT, STUDYGROUP_CODE
		            FROM JOINGROUP
		            GROUP BY STUDYGROUP_CODE) JG ON(SG.STUDYGROUP_CODE = JG.STUDYGROUP_CODE)
		WHERE 1=1
		<if test='keyword neq ""'>
			AND (SG.STUDYGROUP_NAME LIKE '%' || #{keyword} || '%' 
			OR C.CATEGORY_NAME LIKE '%' || #{keyword} || '%'
			OR L.LOCATION_NAME LIKE '%' || #{keyword} || '%'
			OR SG.STUDYGROUP_CODE LIKE '%' || #{keyword} || '%')
		</if>
		<if test='option neq "전체"'>
			AND C.CATEGORY_NAME = #{option}
		</if>
		<if test='createDate1 neq ""'>
			AND SG.STUDYGROUP_STDATE BETWEEN #{createDate1} AND #{createDate2}
		</if>
	</select>
</mapper>