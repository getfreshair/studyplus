<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="SGDetail">

	<resultMap type="always.awake.studyplus.sgDetail.model.vo.SGDetail" id="SGDetailResultSet">
		<id property="studyGroup_Code" column="STUDYGROUP_CODE"/>
		
		<result property="studyGroup_Code" column="STUDYGROUP_CODE"/>
		<result property="studyGroup_Name" column="STUDYGROUP_NAME"/>
		<result property="leaderMem_Code" column="LEADER_CODE"/>	<!-- 로그인 유저 코드 -->
		<result property="member_Code" column="MEMBER_CODE"/>	<!-- 로그인 유저 코드 -->
		<result property="member_NickName" column="MEMBER_NICKNAME"/>
		<result property="location_Code" column="LOCATION_CODE"/>
		<result property="location_Name" column="LOCATION_NAME"/>
		<result property="category_Code" column="CATEGORY_CODE"/>
		<result property="category_Name" column="CATEGORY_NAME"/> <!-- //* -->
		<result property="studyGroup_GoalTime" column="STUDYGROUP_GOALTIME"/>
		<result property="studyGroup_MaxNum" column="STUDYGROUP_MAXNUM"/>
		<result property="studyGroup_Intro" column="STUDYGROUP_INTRO"/>
		<result property="studyGroup_Status" column="STUDYGROUP_STATUS"/> <!-- //** -->
		<result property="studyGroup_StDate" column="STUDYGROUP_STDATE"/>
		<result property="studyGroup_EdDate" column="STUDYGROUP_EDDATE"/>
		<result property="studyGroup_OpenStatus" column="STUDYGROUP_OPENSTATUS"/>
		<result property="studyGroup_Pwd" column="STUDYGROUP_PWD"/>
		
		<result property="gr_Mem_Count" column="GR_MEM_CNT"/> <!-- //* -->
		<result property="gr_Dates" column="GR_DATES"/> <!-- //* -->

		<result property="gr_Rank" column="GR_RANK"/> <!-- //* -->		
		<result property="gr_Week_Total" column="GR_WEEK_TOTAL"/> <!-- //* -->
		<result property="gr_Day_Total" column="GR_DAY_TOTAL"/> <!-- //* -->

		<result property="my_Rank" column="MY_RANK"/> <!-- //* -->		
		<result property="my_Week_Total" column="MY_WEEK_TOTAL"/> <!-- //* -->
		<result property="my_Day_Total" column="MY_DAY_TOTAL"/> <!-- //* -->

		<result property="gr_Fulfill_Mem_Cnt" column="GR_WEEK_FULFILL_CNT"/> <!-- //* -->		
		<result property="gr_Week_Fulfill_Ratio" column="GR_WEEK_FULFILL_RATIO"/> <!-- //* -->	
	</resultMap>
	
	<select id="selectJoinStatus" resultType="_int" parameterType="hashmap">
		SELECT COUNT(*) AS "JOINSTATUS"
		FROM JOINGROUP JG
		WHERE STUDYGROUP_CODE = #{ grCode } AND JOINGROUP_STATUS = 0 AND MEMBER_CODE = #{ memCode }
	</select>
	
<!-- 	*//중요//* => TO_DATE('2018/11/02') -> SYSDATE로 날짜 변경하기 -->
	<!-- select 그룹  detail 쿼리 -->
	<select id="selectOneGrDetailTotal" resultMap="SGDetailResultSet" parameterType="hashmap">
		SELECT WEEK_ST, WEEK_END, LOCATION_NAME, CATEGORY_NAME, STUDYGROUP_CODE,
		       STUDYGROUP_NAME, STUDYGROUP_INTRO, STUDYGROUP_GOALTIME,
		       GR_MEM_CNT, STUDYGROUP_MAXNUM, STUDYGROUP_STDATE,
		       TRUNC((TO_DATE('2018/11/04') - STUDYGROUP_STDATE) + 1) AS "GR_DATES",
		       GR_WEEK_TOTAL, GR_RANK, GR_DAY_TOTAL,
		       GR_WEEK_FULFILL_RATIO, GR_WEEK_FULFILL_CNT
		FROM ( SELECT LOCATION_NAME, CATEGORY_NAME, STUDYGROUP_CODE,
					  STUDYGROUP_NAME, STUDYGROUP_INTRO,
					  (STUDYGROUP_GOALTIME / 3600) AS "STUDYGROUP_GOALTIME",
					  GR_MEM_CNT, STUDYGROUP_MAXNUM, STUDYGROUP_STDATE,
					  TRUNC((TO_DATE('2018/11/04') - STUDYGROUP_STDATE) + 1) AS "GR_DATES", GR_WEEK_TOTAL,
					  RANK() OVER (PARTITION BY CATEGORY_NAME ORDER BY GR_WEEK_TOTAL DESC) AS "GR_RANK",
		              GR_DAY_TOTAL, GR_WEEK_FULFILL_RATIO, GR_WEEK_FULFILL_CNT
		       FROM ( SELECT STUDYGROUP_CODE, SUM(STUDYTIME_STUDYTIME) AS "GR_WEEK_TOTAL"
		              FROM STUDYTIME 
		              WHERE STUDYTIME_DIVISION = 1
		              AND STUDYTIME_DATE BETWEEN TRUNC(TO_DATE('2018/11/04'), 'IW')
		              					 AND TRUNC(TO_DATE('2018/11/04'), 'IW') + 6.99999
		              GROUP BY STUDYGROUP_CODE )
		       JOIN ( SELECT STUDYGROUP_CODE, SUM(STUDYTIME_STUDYTIME) AS "GR_DAY_TOTAL"
		              FROM STUDYTIME
		              WHERE STUDYTIME_DIVISION = 1
		              AND STUDYTIME_DATE LIKE TO_DATE('2018/11/04')
		              GROUP BY STUDYGROUP_CODE ) USING(STUDYGROUP_CODE)
		       JOIN ( SELECT STUDYGROUP_CODE, GR_MEM_CNT,
		       		  		 AVG((GR_FULFILL_CNT / GR_MEM_CNT) * 100) AS "GR_WEEK_FULFILL_RATIO",
		       		  		 AVG(GR_FULFILL_CNT) AS "GR_WEEK_FULFILL_CNT"
		              FROM ( SELECT STUDYTIME_DATE, STUDYGROUP_CODE,
		              				SUM(DECODE(GR_FULFILL_STATUS, 1, 1)) AS "GR_FULFILL_CNT", GR_MEM_CNT
		                     FROM ( SELECT STUDYTIME_DATE, ST.STUDYGROUP_CODE, ST.MEMBER_CODE, MEM_WEEKDAY_TOTAL,
		                     			   DECODE(SIGN(MEM_WEEKDAY_TOTAL - GR.STUDYGROUP_GOALTIME), 1, 1, 0, 1, -1, 0) AS "GR_FULFILL_STATUS"
		                            FROM ( SELECT TRUNC(STUDYTIME_DATE) AS "STUDYTIME_DATE",
		                            			  STUDYGROUP_CODE, MEMBER_CODE,
		                            			  SUM(STUDYTIME_STUDYTIME) AS "MEM_WEEKDAY_TOTAL"
		                                   FROM STUDYTIME
		                                   WHERE STUDYTIME_DIVISION = 1
		                                   AND STUDYTIME_DATE BETWEEN TRUNC(TO_DATE('2018/11/04'), 'IW')
		                                   					  AND TRUNC(TO_DATE('2018/11/04'), 'IW') + 6.99999
		                                   GROUP BY TRUNC(STUDYTIME_DATE), STUDYGROUP_CODE, MEMBER_CODE ) ST
		                            JOIN STUDYGROUP GR ON(ST.STUDYGROUP_CODE = GR.STUDYGROUP_CODE) ),
		                          ( SELECT COUNT(*) AS "GR_MEM_CNT"
		                            FROM JOINGROUP
		                            WHERE STUDYGROUP_CODE = #{ grCode }
		                            AND JOINGROUP_STATUS = 0 )
		                     GROUP BY STUDYTIME_DATE, STUDYGROUP_CODE, GR_MEM_CNT )
		              GROUP BY STUDYGROUP_CODE, GR_MEM_CNT ) USING(STUDYGROUP_CODE)
		       JOIN STUDYGROUP USING(STUDYGROUP_CODE)
		       JOIN CATEGORY USING(CATEGORY_CODE)
		       JOIN LOCATION USING(LOCATION_CODE)
		       WHERE STUDYGROUP_CODE = #{ grCode } ), 
		     ( SELECT TRUNC(TO_DATE('2018/11/04'), 'IW') "WEEK_ST",
		              TRUNC(TO_DATE('2018/11/04'), 'IW') + 6.99999 "WEEK_END"
		       FROM DUAL )
	</select>
	
	<select id="selectOneJoinGrTop" resultMap="SGDetailResultSet" parameterType="hashmap">
			SELECT STUDYGROUP_CODE, MY_WEEK_TOTAL, MY_DAY_TOTAL, MY_RANK
			FROM ( SELECT STUDYGROUP_CODE, MEMBER_CODE, MY_WEEK_TOTAL, MY_RANK
			       FROM ( SELECT STUDYGROUP_CODE, MEMBER_CODE, MY_WEEK_TOTAL,
			                     RANK() OVER (PARTITION BY STUDYGROUP_CODE ORDER BY MY_WEEK_TOTAL DESC) AS "MY_RANK"
			              FROM ( SELECT STUDYGROUP_CODE, MEMBER_CODE, SUM(STUDYTIME_STUDYTIME) AS "MY_WEEK_TOTAL"
			                     FROM STUDYTIME
			                     WHERE STUDYTIME_DIVISION = 1
			                     AND STUDYTIME_DATE BETWEEN TRUNC(TO_DATE('2018/11/04'), 'IW')
			                     					AND TRUNC(TO_DATE('2018/11/04'), 'IW') + 6.99999
			                     GROUP BY STUDYGROUP_CODE, MEMBER_CODE )
			              WHERE STUDYGROUP_CODE = #{ grCode } )
			       WHERE MEMBER_CODE = #{ memCode } )
			JOIN ( SELECT STUDYGROUP_CODE, MEMBER_CODE, SUM(STUDYTIME_STUDYTIME) AS "MY_DAY_TOTAL"
			       FROM STUDYTIME
			       WHERE STUDYTIME_DIVISION = 1 AND MEMBER_CODE = #{ memCode }
			       AND STUDYTIME_DATE LIKE TO_DATE('2018/11/04')
			       GROUP BY STUDYGROUP_CODE, MEMBER_CODE ) USING(STUDYGROUP_CODE)
	</select>
	
	<select id="selectjoinAbleChk" resultType="_int">
		SELECT (STUDYGROUP_MAXNUM - GR_MEM_CNT) AS "JOIN_ABLE_CNT"
		FROM (SELECT COUNT(*) AS "GR_MEM_CNT", STUDYGROUP_CODE
		      FROM JOINGROUP
		      WHERE STUDYGROUP_CODE = #{ grCode } AND JOINGROUP_STATUS = 0
		      GROUP BY STUDYGROUP_CODE)
		JOIN STUDYGROUP USING(STUDYGROUP_CODE)
	</select>
	
	<insert id="insertGroupJoin" parameterType="SGDetail">
		INSERT INTO JOINGROUP
			(JOINGROUP_CODE, STUDYGROUP_CODE, MEMBER_CODE, JOINGROUP_ENROLLDATE, JOINGROUP_STATUS, JOINGROUP_DELETEDATE)
		VALUES
			(SEQ_JOINGROUP_JOINGROUP_CODE.NEXTVAL, #{ grCode }, #{ memCode }, SYSDATE, 0, NULL)
	</insert>
</mapper>
	
	
<!-- 	STUDYTIME_DATE
STUDYGROUP_CODE
GR_DAY_TOTAL
MY_DAY_TOTAL
GR_FULFILL_MEM_CNT
LOCATION_NAME
CATEGORY_NAME
STUDYGROUP_NAME
STUDYGROUP_INTRO
STUDYGROUP_GOALTIME
GR_MEM_CNT
STUDYGROUP_MAXNUM
STUDYGROUP_STDATE
GR_DATES -->
	

	
	
	
	